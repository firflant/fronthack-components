import React from 'react'

export default () => <div>
  <h2>Static HTML project structure</h2>

  <p>After you run <code>fronthack init</code> command and select <em>Static HTML project</em>, you will find a following file structure of the project.</p>

  <h2>src/</h2>

  <p>Input directory. Contains source files like Sass, HTML partials and not minified JavaScript. This is where your code is created.</p>

  <ul>
    <li><em><strong>designs</strong></em> - the place where you should upload the files with designs to display them under the code in the browser. More in chapter Coding the first page.</li>
    <li><em><strong>fonts</strong></em> - the directory that stores custom fonts. By default, You can spot there WAAT icon font package, which is required by .icon component.</li>
    <li><em><strong>images</strong></em> - the place to store graphics and images.</li>
    <li><em><strong>js</strong></em> - the place to store Javascript code.</li>
    <li><em><strong>partials</strong></em> - contains Mustache files called partials - a small reusable blocks of HTML, which are used on various subpages, like header or footer. They becomes rendered in adequate places by Mustache templating language.</li>
    <li><em><strong>sass</strong></em> - the core of SMACSS and BEM methodologies. Sass files becomes compiled too output CSS and are divided into following subdirectories:</li>
    <li><em><strong>base</strong></em> - styles of basic HTML tags, so typography tables, global styles etc. Additionally, a nice Fronthack form framework is located there.</li>
    <li><em><strong>components</strong></em> - library of components used on a project.</li>
    <li><em><strong>layout</strong></em> - styles of elements on layout level. Backgrounds, paddings, flex properties of various sections, which are too general to be a components.</li>
    <li><em><strong>index.html</strong></em> - example starting file of HTML. You can check here how to use Mustache partials correctly.</li>
  </ul>

  <h2>dist/</h2>

  <p>Fully self-sufficient output directory, ready to be hosted on production server. It contains rendered CSS, HTML and all other necessary files like JS, images and fonts. Editing of these files is pointless, because they will become overwritten on next run of npm run build command.</p>

  <ul>
    <li><em><strong>css</strong></em> - contains minified, complete CSS file rendered from Sass.</li>
    <li><em><strong>fonts</strong></em> - fonts copied from src/fonts.</li>
    <li><em><strong>images</strong></em> - image files from the src/images directory, compressed by built in imagemin package, which decreases the size up to 56%!</li>
    <li><em><strong>js</strong></em> - minified JS files from the src/js directory.</li>
    <li><em><strong>index.html</strong></em> - complete HTML file generated by Mustache.</li>
  </ul>

  <h2>.dev/</h2>

  <p>Output directory to live preview of the results, which is hosted on http://localhost:8000 after running npm run dev command. Unlike dist directory, code there is not minified which makes it easier to debug. Instead of that it loads various helpful JS scripts.</p>

  <h2>./</h2>

  <p>Another elements in the root directory:</p>

  <ul>
    <li><em><strong>node_modules</strong></em> - contains dependent Npm packages, required by Fronthack.</li>
    <li><em><strong>htmlhintrc</strong></em> - HTMLHint configuration file. Read more at linters.</li>
    <li><em><strong>sass-lint.yml</strong></em> - Sass Lint configuration file. Read more at linters.</li>
    <li><em><strong>gulpfile.js</strong></em> - configuration file of the automation scripts.</li>
    <li><em><strong>package.json</strong></em> - Npm configuration file.</li>
  </ul>
</div>
